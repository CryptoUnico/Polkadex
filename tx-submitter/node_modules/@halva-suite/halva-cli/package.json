{
  "_from": "@halva-suite/halva-cli@^0.3.3",
  "_id": "@halva-suite/halva-cli@0.3.3",
  "_inBundle": false,
  "_integrity": "sha512-UD26zzVvEVJB9dzm419Wk2+X7B1Y38r0YXtfns5iUzL1A39quwZG4+6tIytETNHK+Syw9YwwRce3nU5fP9CcsQ==",
  "_location": "/@halva-suite/halva-cli",
  "_phantomChildren": {
    "@babel/runtime": "7.12.5",
    "@types/bn.js": "4.11.6",
    "@types/node-fetch": "2.5.7",
    "@types/websocket": "1.0.1",
    "base-x": "3.0.8",
    "blakejs": "1.1.0",
    "bn.js": "4.11.9",
    "camelcase": "5.3.1",
    "create-hash": "1.2.0",
    "elliptic": "6.5.3",
    "eventemitter3": "4.0.7",
    "hash.js": "1.1.7",
    "ip-regex": "4.2.0",
    "js-sha3": "0.8.0",
    "memoizee": "0.4.14",
    "node-fetch": "2.6.1",
    "pbkdf2": "3.1.1",
    "rxjs": "6.6.3",
    "scryptsy": "2.1.0",
    "tweetnacl": "1.0.3",
    "websocket": "1.0.33",
    "xxhashjs": "0.2.2"
  },
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "@halva-suite/halva-cli@^0.3.3",
    "name": "@halva-suite/halva-cli",
    "escapedName": "@halva-suite%2fhalva-cli",
    "scope": "@halva-suite",
    "rawSpec": "^0.3.3",
    "saveSpec": null,
    "fetchSpec": "^0.3.3"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/@halva-suite/halva-cli/-/halva-cli-0.3.3.tgz",
  "_shasum": "15b44159755120b34f1b657a03364cd196832534",
  "_spec": "@halva-suite/halva-cli@^0.3.3",
  "_where": "/home/knoldus/Desktop/rust/polkadex-project/tx-submitter",
  "ava": {
    "failFast": true,
    "files": [
      "build/main/**/*.spec.js"
    ],
    "sources": [
      "build/main/**/*.js"
    ]
  },
  "bin": {
    "halva-cli": "build/main/cli.js"
  },
  "bugs": {
    "url": "https://github.com/halva-suite/halva/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@halva-suite/halva-spec-builder": "^1.1.0",
    "@polkadot/api": "^2.1.1",
    "@polkadot/api-contract": "^2.1.1",
    "@polkadot/keyring": "^3.5.1",
    "@polkadot/util": "^3.5.1",
    "@polkadot/util-crypto": "^3.5.1",
    "assertion-error": "^1.1.0",
    "chai": "^4.2.0",
    "class-transformer": "^0.3.1",
    "enquirer": "^2.3.6",
    "execa": "^4.0.3",
    "hygen": "5.0.3",
    "mocha": "^7.2.0",
    "nodegit": "^0.27.0",
    "sha.js": "^2.4.11",
    "yargs": "^15.4.1"
  },
  "deprecated": false,
  "description": "Halva is a toolchain for developing Decentralized Applications based on Substrate. It provides a high-level way to configure a development environment, interact with Substrate through external API and writing your test cases.",
  "devDependencies": {
    "@bitjson/npm-scripts-info": "^1.0.0",
    "@bitjson/typedoc": "^0.15.0-0",
    "@istanbuljs/nyc-config-typescript": "^0.1.3",
    "@types/chai": "^4.2.12",
    "@types/jest": "^26.0.13",
    "@types/mocha": "^7.0.2",
    "@types/yargs": "^15.0.7",
    "@typescript-eslint/eslint-plugin": "^3.10.1",
    "@typescript-eslint/parser": "^3.10.1",
    "ava": "^3.13.0",
    "codecov": "^3.7.2",
    "cz-conventional-changelog": "^2.1.0",
    "eslint": "^7.10.0",
    "eslint-plugin-prettier": "^3.1.4",
    "gh-pages": "^2.0.1",
    "jest": "^26.4.2",
    "npm-run-all": "^4.1.5",
    "nyc": "^14.1.1",
    "open-cli": "^6.0.1",
    "prettier": "^1.18.2",
    "standard-version": "^9.0.0",
    "trash-cli": "^3.1.0",
    "ts-jest": "^26.4.1",
    "ts-node": "^8.10.2",
    "tslint": "^5.18.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-immutable": "^6.0.1",
    "typescript": "^3.9.7"
  },
  "engines": {
    "node": ">=10"
  },
  "homepage": "https://github.com/halva-suite/halva#readme",
  "jest": {
    "transform": {
      ".(ts|tsx)": "<rootDir>/_test_/preprocessor.js"
    },
    "testRegex": "(/__test__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ],
    "testEnvironment": "node",
    "setupTestFrameworkScriptFile": ".<rootDir>/_test_/unit/lib/setup.ts"
  },
  "keywords": [
    "substarte",
    "testing",
    "polkadot"
  ],
  "license": "MIT",
  "main": "build/main/index.js",
  "module": "build/module/index.js",
  "name": "@halva-suite/halva-cli",
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  },
  "prettier": {
    "singleQuote": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/halva-suite/halva.git"
  },
  "scripts": {
    "build": "run-s clean && run-p build:* && cp -av -R _templates build/main",
    "build:main": "tsc -p tsconfig.json",
    "clean": "trash build test",
    "cov": "run-s build test:unit cov:html && open-cli coverage/index.html",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov && codecov",
    "describe": "npm-scripts-info",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude \"**/(node_modules|test|doc)/**/*\" --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude \"**/(node_modules|test|doc)/**/*\" --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:tslint": "tslint --fix --project .",
    "prepare-release": "run-s reset test cov:check doc:html version doc:publish",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "test": "jest ./_test_",
    "version": "standard-version",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\""
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "typings": "build/main/index.d.ts",
  "version": "0.3.3"
}
