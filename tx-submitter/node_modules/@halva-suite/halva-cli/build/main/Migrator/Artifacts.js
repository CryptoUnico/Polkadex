"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractPrimitive = exports.artifacts = void 0;
const util_1 = require("@polkadot/util");
const fs_1 = require("fs");
const path_1 = require("path");
const Deployer_1 = require("../Deployer/Deployer");
const utils_1 = require("../Deployer/utils");
class artifacts {
    static require(contract) {
        const contractObj = JSON.parse(fs_1.readFileSync(process.cwd() + '/deployData.json', 'utf-8'));
        return this.CreateContractObject(contractObj, contract, globalThis.networkName);
    }
    static async ReturnTxResult(abiMethod, signer, contract, args) {
        const fn = contract.abi.messages[util_1.stringCamelCase(abiMethod)];
        let data;
        if (args == null) {
            data = fn();
        }
        else {
            data = fn(args);
        }
        return Deployer_1.callContract(halva.polkadot, signer, contract.address, data);
    }
    static async ReturnRPCResult(abiMethod, signer, contract, args) {
        const fn = contract.abi.messages[util_1.stringCamelCase(abiMethod)];
        let data;
        if (args == null) {
            data = fn();
        }
        else {
            data = fn(args);
        }
        return Deployer_1.callContractRPC(halva.polkadot, signer, contract.address, data);
    }
    static CreateContractObject(contract, contractName, networkName) {
        let deployed = false;
        const ContractData = contract.networks
            .find(x => x.networkName == networkName)
            .contracts.find(c => path_1.basename(c.path.contractPath, path_1.extname(c.path.contractPath)) ==
            contractName);
        if (ContractData) {
            deployed = true;
        }
        ContractData.abi = utils_1.getAbiObj(JSON.parse(ContractData.abiJSON));
        // @ts-ignore currently unused local ignore
        for (const [key, value] of Object.entries(ContractData.abi.abi.contract.messages)) {
            ContractPrimitive.prototype[value.name] = async function (signer, args) {
                const txResult = await artifacts.ReturnTxResult(value.name, signer, ContractData, args);
                const rpcResult = await artifacts.ReturnRPCResult(value.name, signer, ContractData, args);
                return { txResult, rpcResult };
            };
        }
        const ContractObject = new ContractPrimitive(deployed, contractName);
        return ContractObject;
    }
}
exports.artifacts = artifacts;
// tslint:disable-next-line: max-classes-per-file
class ContractPrimitive {
    constructor(deployed, contract) {
        this.deployed = deployed;
        this.contract = contract;
    }
    new() {
        return this.contract;
    }
    Deployed() {
        return this.deployed;
    }
}
exports.ContractPrimitive = ContractPrimitive;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJ0aWZhY3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL01pZ3JhdG9yL0FydGlmYWN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSx5Q0FBaUQ7QUFDakQsMkJBQWtDO0FBQ2xDLCtCQUF5QztBQUV6QyxtREFBcUU7QUFDckUsNkNBQThDO0FBRTlDLE1BQWEsU0FBUztJQUNiLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBZ0I7UUFDcEMsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FDNUIsaUJBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsa0JBQWtCLEVBQUUsT0FBTyxDQUFDLENBQzFELENBQUM7UUFDRixPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FDOUIsV0FBeUIsRUFDekIsUUFBUSxFQUNSLFVBQVUsQ0FBQyxXQUFXLENBQ3ZCLENBQUM7SUFDSixDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQ2hDLFNBQWlCLEVBQ2pCLE1BQW1CLEVBQ25CLFFBQWtCLEVBQ2xCLElBQVM7UUFFVCxNQUFNLEVBQUUsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxzQkFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsSUFBSSxJQUFTLENBQUM7UUFDZCxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7WUFDaEIsSUFBSSxHQUFHLEVBQUUsRUFBRSxDQUFDO1NBQ2I7YUFBTTtZQUNMLElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDakI7UUFDRCxPQUFPLHVCQUFZLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQ2pDLFNBQWlCLEVBQ2pCLE1BQW1CLEVBQ25CLFFBQWtCLEVB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