"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Test = void 0;
const TestRunner_1 = require("../TestRunner");
class Test {
    constructor() {
        this.command = 'test';
        this.describe = 'Run tests';
    }
    builder(args) {
        return args
            .option('p', {
            alias: 'path',
            type: 'string',
            default: './test/',
            array: true,
            required: false,
            describe: 'Path to test folder'
        })
            .option('c', {
            alias: 'config',
            type: 'string',
            required: false,
            default: null,
            describe: 'Path to configure file'
        })
            .option('n', {
            alias: 'network',
            type: 'string',
            required: false,
            default: null,
            describe: 'Network name'
        })
            .option('b', {
            alias: 'bail',
            type: 'boolean',
            required: false,
            default: null,
            describe: 'Enable bail'
        })
            .option('v', {
            alias: 'verbose',
            type: 'boolean',
            required: false,
            default: false,
            describe: 'Wite debug info'
        })
            .option('t', {
            alias: 'timeout',
            type: 'number',
            required: false,
            default: 0,
            describe: 'Timeout time for test'
        });
    }
    async handler(args) {
        TestRunner_1.HalvaRunTests(new TestRunner_1.HalvaTestConfig(args.p, null, args.c, args.n, args.d, args.t, null, args.v, true));
    }
}
exports.Test = Test;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9Db21tYW5kcy90ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDhDQUErRDtBQUUvRCxNQUFhLElBQUk7SUFBakI7UUFDUyxZQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxXQUFXLENBQUM7SUFnRWhDLENBQUM7SUE5RFEsT0FBTyxDQUFDLElBQWdCO1FBQzdCLE9BQU8sSUFBSTthQUNSLE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDWCxLQUFLLEVBQUUsTUFBTTtZQUNiLElBQUksRUFBRSxRQUFRO1lBQ2QsT0FBTyxFQUFFLFNBQVM7WUFDbEIsS0FBSyxFQUFFLElBQUk7WUFDWCxRQUFRLEVBQUUsS0FBSztZQUNmLFFBQVEsRUFBRSxxQkFBcUI7U0FDaEMsQ0FBQzthQUNELE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDWCxLQUFLLEVBQUUsUUFBUTtZQUNmLElBQUksRUFBRSxRQUFRO1lBQ2QsUUFBUSxFQUFFLEtBQUs7WUFDZixPQUFPLEVBQUUsSUFBSTtZQUNiLFFBQVEsRUFBRSx3QkFBd0I7U0FDbkMsQ0FBQzthQUNELE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDWCxLQUFLLEVBQUUsU0FBUztZQUNoQixJQUFJLEVBQUUsUUFBUTtZQUNkLFFBQVEsRUFBRSxLQUFLO1lBQ2YsT0FBTyxFQUFFLElBQUk7WUFDYixRQUFRLEVBQUUsY0FBYztTQUN6QixDQUFDO2FBQ0QsTUFBTSxDQUFDLEdBQUcsRUFBRTtZQUNYLEtBQUssRUFBRSxNQUFNO1lBQ2IsSUFBSSxFQUFFLFNBQVM7WUFDZixRQUFRLEVBQUUsS0FBSztZQUNmLE9BQU8sRUFBRSxJQUFJO1lBQ2IsUUFBUSxFQUFFLGFBQWE7U0FDeEIsQ0FBQzthQUNELE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDWCxLQUFLLEVBQUUsU0FBUztZQUNoQixJQUFJLEVBQUUsU0FBUztZQUNmLFFBQVEsRUFBRSxLQUFLO1lBQ2YsT0FBTyxFQUFFLEtBQUs7WUFDZCxRQUFRLEVBQUUsaUJBQWlCO1NBQzVCLENBQUM7YUFDRCxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ1gsS0FBSyxFQUFFLFNBQVM7WUFDaEIsSUFBSSxFQUFFLFFBQVE7WUFDZCxRQUFRLEVBQUUsS0FBSztZQUNmLE9BQU8sRUFBRSxDQUFDO1lBQ1YsUUFBUSxFQUFFLHVCQUF1QjtTQUNsQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU0sS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFxQjtRQUN4QywwQkFBYSxDQUNYLElBQUksNEJBQWUsQ0FDakIsSUFBSSxDQUFDLENBQWEsRUFDbEIsSUFBSSxFQUNKLElBQUksQ0FBQyxDQUFXLEVBQ2hCLElBQUksQ0FBQyxDQUFXLEVBQ2hCLElBQUksQ0FBQyxDQUFZLEVBQ2pCLElBQUksQ0FBQyxDQUFXLEVBQ2hCLElBQUksRUFDSixJQUFJLENBQUMsQ0FBWSxFQUNqQixJQUFJLENBQ0wsQ0FDRixDQUFDO0lBQ0osQ0FBQztDQUNGO0FBbEVELG9CQWtFQyJ9