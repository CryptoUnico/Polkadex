import { ApiPromise } from '@polkadot/api';
import { KeyringPair } from '@polkadot/keyring/types';
import { Metadata } from '@polkadot/types';
import Mocha from 'mocha';
import { artifacts } from '../Migrator/Artifacts';
import { HalvaTestConfig } from './Config/HalvaTestConfig';
declare global {
    var expect: any;
    var assert: any;
    var artifacts: artifacts;
    var networkName: string;
    var mochaConfigure: Mocha;
    var alicePair: KeyringPair;
    var bobPair: KeyringPair;
    var charliePair: KeyringPair;
    var halva: halva;
    var verbose: boolean;
    var eventNotEmitted: any;
    var eventEmitted: any;
    var passes: any;
    var fails: any;
    var chainMetadata: any;
}
export declare const HalvaRunTests: (config: HalvaTestConfig, onlyGlobal?: boolean) => Promise<void>;
export declare const SetTestGlobal: (accounts: KeyringPair[], polkadot: ApiPromise, config: HalvaTestConfig, alicePair: KeyringPair, bobPair: KeyringPair, charliePair: KeyringPair, mochaConfigure: Mocha, metadata: Metadata) => void;
export declare const CreateMocha: (config: HalvaTestConfig) => Mocha;
interface halva {
    accounts: KeyringPair[];
    polkadot: ApiPromise;
}
export {};
